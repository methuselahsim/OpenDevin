✳️😇️always try [git init]; "make build" <in folder first {after restart!}
also make build locks sometimes. stop term and just try again :/ {web curl can get interupted,build AGAIN }😇️
🖥️*restarting linux/laptop after npm/ etc really helps..🖥️

🔛️ sudo snap install ollama >>first
>>then instead of llama3 , use "CODEGEMMA"< its made specifically 4 coding>>5gb

ollama pull codegemma
ollama pull stable-code  (for "embedding")https://ollama.com/blog/embedding-models

(now w8 till install is done {it should work wsl style on ur ubuntu, till pydeps after}
modelname codegemma
-e LLM_API_KEY="ollama" \
http://host.docker.internal:11434
__________________
The Ollama API is now available at 127.0.0.1:11434
🔛️🔛️🔛️🔛️🔛️🔛️🔛️🔛️
https://discord.com/channels/1222935860639563850/1226675986935054386/1226809587584335913
🔛️
Sure! Here are all the steps from A to Z to set up OpenDevin in Ubuntu WSL with Python 3.12.1, Node.js 20.12.1, Docker, and the requirements:

## Prerequisites

1. Ensure that WSL2 is installed on your Windows system. Open PowerShell as an administrator and run the following command:

```
wsl --install
```

2. Install Docker Desktop for Windows and enable WSL2 integration in the Docker settings.

## Setting up Ubuntu in WSL

1. Open Ubuntu in WSL.

2. Update the package lists and install updates:

```
sudo apt update
sudo apt upgrade
```

3. Install the required packages:

```
sudo apt install git make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python3-openssl
```

## Installing Python 3.12.1

1. Add the Deadsnakes PPA:

```
sudo add-apt-repository ppa:deadsnakes/ppa
```

2. Update the package lists:

```
sudo apt update
```

3. Install Python 3.12.1:

```
sudo apt install python3.12
```

4. Verify the Python version:

```
python3.12 --version
```

5. Install pip for Python 3.12.1:

```
sudo apt install python3.12-distutils
curl https://bootstrap.pypa.io/get-pip.py | python3.12
```

6. Verify the pip version for Python 3.12.1:

```
python3.12 -m pip --version
```

## Installing Node.js 20.12.1 with nvm

1. Install cURL:

```
sudo apt-get install curl
```

2. Download and run the nvm installation script:

```
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
```

3. Close and reopen your terminal.

4. Verify the nvm installation:

```
command -v nvm
```

5. Install Node.js 20.12.1:

```
nvm install 20.12.1
```

6. Set Node.js 20.12.1 as the default version:

```
nvm alias default 20.12.1
```

7. Verify the Node.js and npm versions:

```
node -v
npm -v
```

## Installing Poetry

1. Install Poetry 1.8 or higher:

```
curl -sSL https://install.python-poetry.org | python3.12 -
```

2. Add the Poetry path to your shell configuration (e.g., ~/.bashrc):

```
export PATH="$HOME/.local/bin:$PATH"
```

3. Reload the shell configuration:

```
source ~/.bashrc
```

## Setting up Docker

1. Install Docker:

```
sudo apt install docker.io
```

2. Add your user to the Docker group:

```
sudo usermod -aG docker $USER
```

3. Log out and log back in for the change to take effect.

## Cloning and setting up OpenDevin

1. Navigate to the desired directory, e.g.:

```
cd /mnt/c/Users/yourname
```

2. Clone the OpenDevin repository:

```
git clone https://github.com/OpenDevin/OpenDevin.git
```

3. Navigate into the cloned directory:

```
cd OpenDevin
```

4. Build the project and set up the environment:

```
make build
```

5. Configure the desired language model:

```
make setup-config
```

Enter the API key and model name when prompted.

## Starting OpenDevin

1. Start OpenDevin:

```
make run
```

This starts both the backend and frontend servers.

2. For help on available commands and targets, use:

```
make help
```

With these steps, you should be able to successfully set up and start OpenDevin in Ubuntu WSL with Python 3.12.1, Node.js 20.12.1, Docker, and all the requirements. Enjoy developing and exploring with OpenDevin!


🔛️🔛️🔛️🔛️🔛️🔛️🔛️🔛️

💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️
poetry env use python3.11 

https://github.com/OpenDevin/OpenDevin/tree/rb/event-stream-structure

*this version worked (after did all installs 4 wsl)*

https://github.com/OpenDevin/OpenDevin/blob/rb/event-stream-structure/Makefile

change  api stuff with 

make setup-config



https://stackoverflow.com/questions/9227873/fork-from-a-branch-in-github
💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️💯️

🐻️
(*py 12 wasn't enough..) 
https://vegastack.com/tutorials/how-to-install-python-3-11-on-ubuntu-22-04/
or maybe it was.✳️🐻️
🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️
🌊️current issues? 
>starts html.✅️
0.(wont answer any questions. something isn't hooked up ]❌️


🍎️and mac can "create controller; is docker running?"🍎️

❤️‍🩹️dont sweat it , im optomistic we will figure it out this is only day 2 and 
we got so far from "hour1/day1"etc.❤️‍🩹️
🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️🌊️


















🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️

😠️

🙃️
🎭️
poetry env use python3.11 
🎭️

(this seemed 2 get me farther)
🙃️
Command not found: uvicorn
pip install uvicorn
🙃️
OpenDevin/opendevin/server/listen.py", line 6, in <module>
    import litellm
ModuleNotFoundError: No module named 'litellm'
^Cmake: *** [Makefile:192: run] Interrupt

pip install litellm
pip install litellm, fastapi ,toml , docker , termcolor ,e2b,tenacity,browsergym, html2text,
json_repair
🥬️
grabbed "requirments.txt" from diff branch

{install pip}

 python -m pip install -r requirements.txt

{still doesnt' full thru }
🥬️
😠️😠️😠️😠️
{didnt work out}
☠️
OpenDevin/opendevin/server/listen.py", line 190, in <module>
    app.mount('/', StaticFiles(directory='./frontend/dist'), name='dist')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ij/.local/lib/python3.12/site-packages/starlette/staticfiles.py", line 59, in __init__
    raise RuntimeError(f"Directory '{directory}' does not exist")

ERROR:root:<class 'RuntimeError'>: Directory './frontend/dist' does not exist
☠️
🤡️🤡️🤡️🤡️
Can you reinstall docker and wsl and try it from the guide again?
👨🏽‍💻️
its a pretty obnoxious ask 2 install something on someones windows tbh . if it goes wrong its a huge hassle 2 reinstall...
its basically equivalent 2 malware :/
are u sure we cant make this work on a raw ubuntu instance ?
we may just have 2 lay dormant untill u can run on raw linux ; u shouldn't be askign 2 go on ppls windows especially with build deps thsi tortured and convoluted :/
👨🏽‍💻️
🤡️🤡️🤡️🤡️
😭️very dissapointing TT . 
devika? >>uses python3.10 & 3.12 >_> ... so 'clown'.. *sigh*. wut do we do now? 

🏴‍☠️️ try other branch that says it can use ubunt/linux? w/e🏴‍☠️️
🦙️
bootstrap my own thing with ollama ? (ollama seems very user friendly at least...)
🦉️can tie in with WGU-ESSAY🦉️ {getting similar results w/o all that spy-getti code? }
w/e their doing must be pretty ez if those clowns pulled it off in 2 months...]
https://ollama.com/blog/embedding-models
🦙️

🏖️can i at least see an example of this thing working  ? see how it gives results 

interacts with code ? 

>>autogenai ? crewai?
😭️






🗑️🗑️🗑️🗑️🗑️🗑️🗑️🗑️
😝️
In Installing Poetry:
make sure to run cammand as while i were installing got error as :
ModuleNotFoundError: No module named 'ensurepip'
so also write in cammand line :
sudo apt-get install python3.12-venv


😝️
virtualenv venv --python=/usr/local/bin/python
😝️

**SOLVED:** You have to run` export SANDBOX_USER_ID=1000 `https://github.com/OpenDevin/OpenDevin/issues/936
😝️
🔛️

❓️
https://github.com/python-poetry/poetry/issues/2094


Package operations: 238 installs, 0 updates, 0 removals

  - Installing certifi (2024.2.2): Pending...
  - Installing h11 (0.14.0): Pending...
  - Installing idna (3.7): Pending...
  - Installing sniffio (1.3.1): Pending...
  - Installing typing-extensions (4.11.0)

(waiting)
